const twimba = (strings, ...values) => {
  let result = "";
  for (let i = 0; i < strings.length; i++) {
    result += strings[i];
    if (i < values.length) {
      result += values[i]
    }
  }
  result = result.replace(/(?<=:.+) /g, ";").replace(/$/g, ";");
  const propertyNameRules = {
    "fl": "flex",
    "flb": "flex-basis",
    "fld": "flex-direction",
    "flf": "flex-flow",
    "flg": "flex-grow",
    "fls": "flex-shrink",
    "flw": "flex-wrap",
    "ga": "grid-area",
    "gac": "grid-auto-columns",
    "gaf": "grid-auto-flow",
    "gar": "grid-auto-rows",
    "gc": "grid-column",
    "gce": "grid-column-end",
    "gcg": "grid-column-gap",
    "gcs": "grid-column-start",
    "gr": "grid-row",
    "gre": "grid-row-end",
    "grg": "grid-row-gap",
    "grs": "grid-row-start",
    "gt": "grid-template",
    "gta": "grid-template-areas",
    "gtc": "grid-template-columns",
    "gtr": "grid-template-rows",
    "ac": "align-content",
    "ai": "align-items",
    "as": "align-self",
    "jc": "justify-content",
    "ji": "justify-items",
    "js": "justify-self",
    "jac": "place-content",
    "jai": "place-items",
    "jas": "place-self",
    "ea": "ease",
    "eaw": "ease-all-delay",
    "ead": "ease-all-duration",
    "eaf": "ease-all-function",
    "eb": "ease-box",
    "ebw": "ease-box-delay",
    "ebd": "ease-box-duration",
    "ebf": "ease-box-function",
    "ec": "ease-colors",
    "ecw": "ease-colors-delay",
    "ecd": "ease-colors-duration",
    "ecf": "ease-colors-function",
    "eo": "ease-opacity",
    "eow": "ease-opacity-delay",
    "eod": "ease-opacity-duration",
    "eof": "ease-opacity-function",
    "et": "ease-transform",
    "etw": "ease-transform-delay",
    "etd": "ease-transform-duration",
    "etf": "ease-transform-function",
    "rdb": "border-bottom-radius",
    "rdl": "border-left-radius",
    "rdr": "border-right-radius",
    "rdt": "border-top-radius",
    "s": "size",
    "bg": "background",
    "bga": "background-attachment",
    "bgclip": "background-clip",
    "bgc": "background-color",
    "bgi": "background-image",
    "bgo": "background-origin",
    "bgp": "background-position",
    "bgr": "background-repeat",
    "bgs": "background-size",
    "bd": "border",
    "bdb": "border-bottom",
    "bcb": "border-bottom-color",
    "rdbl": "border-bottom-left-radius",
    "rdbr": "border-bottom-right-radius",
    "bsb": "border-bottom-style",
    "bwb": "border-bottom-width",
    "bc": "border-color",
    "bdl": "border-left",
    "bcl": "border-left-color",
    "bsl": "border-left-style",
    "bwl": "border-left-width",
    "rd": "border-radius",
    "bdr": "border-right",
    "bcr": "border-right-color",
    "bsr": "border-right-style",
    "bwr": "border-right-width",
    "bs": "border-style",
    "bdt": "border-top",
    "bct": "border-top-color",
    "rdtl": "border-top-left-radius",
    "rdtr": "border-top-right-radius",
    "bst": "border-top-style",
    "bwt": "border-top-width",
    "bw": "border-width",
    "b": "bottom",
    "bxs": "box-shadow",
    "c": "color",
    "cg": "column-gap",
    "d": "display",
    "ff": "font-family",
    "fs": "font-size",
    "fw": "font-weight",
    "g": "gap",
    "h": "height",
    "l": "left",
    "ls": "letter-spacing",
    "lh": "line-height",
    "m": "margin",
    "mb": "margin-bottom",
    "ml": "margin-left",
    "mr": "margin-right",
    "mt": "margin-top",
    "o": "opacity",
    "ol": "outline",
    "olc": "outline-color",
    "olo": "outline-offset",
    "ols": "outline-style",
    "olw": "outline-width",
    "of": "overflow",
    "ofa": "overflow-anchor",
    "p": "padding",
    "pb": "padding-bottom",
    "pl": "padding-left",
    "pr": "padding-right",
    "pt": "padding-top",
    "pe": "pointer-events",
    "pos": "position",
    "r": "right",
    "rg": "row-gap",
    "ta": "text-align",
    "td": "text-decoration",
    "tdc": "text-decoration-color",
    "tdl": "text-decoration-line",
    "tdsi": "text-decoration-skip-ink",
    "tds": "text-decoration-style",
    "tdt": "text-decoration-thickness",
    "te": "text-emphasis",
    "tec": "text-emphasis-color",
    "tep": "text-emphasis-position",
    "tes": "text-emphasis-style",
    "txs": "text-shadow",
    "tt": "text-transform",
    "t": "top",
    "origin": "transform-origin",
    "tween": "transition",
    "us": "user-select",
    "va": "vertical-align",
    "ws": "white-space",
    "w": "width",
    "zi": "z-index"
  };
  for (let rule in propertyNameRules) {
    result = result.replace(new RegExp("(?<=\s|;|^)" + rule + ":", 'mg'), propertyNameRules[rule] + ":")
  }
  const propertyValueRules = {
    "hflex": "flex;flex-direction:row",
    "vflex": "flex;flex-direction:column",
  };
  for (let rule in propertyValueRules) {
    result = result.replace(new RegExp(":" + rule, 'mg'), ":" + propertyValueRules[rule])
  }
  const customPropertyRules = {
    "ofx": ["overflow-left", "overflow-right"],
    "overflow-x": ["overflow-left", "overflow-right"],
    "ofy": ["overflow-top", "overflow-bottom"],
    "overflow-y": ["overflow-top", "overflow-bottom"],
    "bdx": ["border-left", "border-right"],
    "border-x": ["border-left", "border-right"],
    "bcx": ["border-left-color", "border-right-color"],
    "border-x-color": ["border-left-color", "border-right-color"],
    "bsx": ["border-left-style", "border-right-style"],
    "border-x-style": ["border-left-style", "border-right-style"],
    "bwx": ["border-left-width", "border-right-width"],
    "border-x-width": ["border-left-width", "border-right-width"],
    "bdy": ["border-top", "border-bottom"],
    "border-y": ["border-top", "border-bottom"],
    "bcy": ["border-top-color", "border-bottom-color"],
    "border-y-color": ["border-top-color", "border-bottom-color"],
    "bsy": ["border-top-style", "border-bottom-style"],
    "border-y-style": ["border-top-style", "border-bottom-style"],
    "bwy": ["border-top-width", "border-bottom-width"],
    "border-y-width": ["border-top-width", "border-bottom-width"],
    "mx": ["margin-left", "margin-right"],
    "margin-x": ["margin-left", "margin-right"],
    "my": ["margin-top", "margin-bottom"],
    "margin-y": ["margin-top", "margin-bottom"],
    "px": ["padding-left", "padding-right"],
    "padding-x": ["padding-left", "padding-right"],
    "py": ["padding-top", "padding-bottom"],
    "padding-y": ["padding-top", "padding-bottom"],
  };
  for (let possibleCustomProperty of result.match(/\w+:.\w+/mg)) {
    const cusProp = possibleCustomProperty.split(":");
    for (let customPropertyRuleName of Object.keys(customPropertyRules)) {
      if (customPropertyRuleName === cusProp[0]) {
        const rule = customPropertyRules[cusProp[0]];
        const replacement = rule[0] + ":" + cusProp[1] + ";" + rule[1] + ":" + cusProp[1] + ";";
        result = result.replace(new RegExp(possibleCustomProperty, "g"), replacement)
      }
    }
  }
  return result
}